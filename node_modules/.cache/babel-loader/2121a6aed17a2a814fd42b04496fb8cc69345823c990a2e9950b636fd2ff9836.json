{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seorin\\\\Desktop\\\\Mapdagu-Front\\\\src\\\\components\\\\EvaluationList.js\",\n  _s = $RefreshSig$();\nimport \"./EvaluationList.css\";\nimport { useState, useEffect } from \"react\";\nimport EvaluationItem from \"./EvaluationItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortOptionList = [{\n  value: \"latest\",\n  name: \"최신순\"\n}, {\n  value: \"oldest\",\n  name: \"오래된 순\"\n}];\nconst EvaluationList = ({\n  data\n}) => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [sortType, setSortType] = useState(\"latest\");\n  const [sortedData, setSortedData] = useState([]);\n  useEffect(() => {\n    const compare = (a, b) => {\n      if (sortType === \"latest\") {\n        return Number(b.date) - Number(a.date);\n      } else {\n        return Number(a.date) - Number(b.date);\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(data));\n    copyList.sort(compare);\n    setSortedData(copyList);\n  }, [data, sortType]);\n  const onChangeSearch = e => {\n    setSearch(e.target.value);\n  };\n  const getSearchResult = () => {\n    return search === \"\" ? sortedData : sortedData.filter(it => it.itemName.toLowerCase().includes(search));\n  };\n  const onChangeSortType = e => {\n    setSortType(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EvaluationList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left_col\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uCD5C\\uADFC \\uB098\\uC758 \\uB9F5\\uAE30\\uD3C9\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right_col\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortType,\n          onChange: onChangeSortType,\n          children: sortOptionList.map((it, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: it.value,\n            children: it.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchbar\",\n      value: search,\n      onChange: onChangeSearch,\n      placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_wrapper\",\n      children: getSearchResult().map(it => /*#__PURE__*/_jsxDEV(EvaluationItem, {\n        ...it\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(EvaluationList, \"1XGWG5Lpj23Sb/htM5cF4mF2+7I=\");\n_c = EvaluationList;\nexport default EvaluationList;\nvar _c;\n$RefreshReg$(_c, \"EvaluationList\");","map":{"version":3,"names":["useState","useEffect","EvaluationItem","jsxDEV","_jsxDEV","sortOptionList","value","name","EvaluationList","data","_s","search","setSearch","sortType","setSortType","sortedData","setSortedData","compare","a","b","Number","date","copyList","JSON","parse","stringify","sort","onChangeSearch","e","target","getSearchResult","filter","it","itemName","toLowerCase","includes","onChangeSortType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","idx","placeholder","id","_c","$RefreshReg$"],"sources":["C:/Users/seorin/Desktop/Mapdagu-Front/src/components/EvaluationList.js"],"sourcesContent":["import \"./EvaluationList.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport EvaluationItem from \"./EvaluationItem\";\r\n\r\nconst sortOptionList = [\r\n    {value: \"latest\", name: \"최신순\"},\r\n    {value: \"oldest\", name: \"오래된 순\"},\r\n]\r\n\r\nconst EvaluationList = ({data}) => {    \r\n    const [search, setSearch] = useState(\"\");\r\n    const [sortType, setSortType] = useState(\"latest\");\r\n    const [sortedData, setSortedData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const compare = (a, b) => {\r\n            if(sortType === \"latest\"){\r\n                return Number(b.date) - Number(a.date);\r\n            }\r\n            else {\r\n                return Number(a.date) - Number(b.date);\r\n            }\r\n        };\r\n        const copyList = JSON.parse(JSON.stringify(data));\r\n        copyList.sort(compare);\r\n        setSortedData(copyList);\r\n    }, [data, sortType]);\r\n\r\n    const onChangeSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const getSearchResult = () => {\r\n        return search === \"\"\r\n            ? sortedData\r\n            : sortedData.filter((it) => \r\n                it.itemName.toLowerCase().includes(search));\r\n    };\r\n\r\n    const onChangeSortType = (e) => {\r\n        setSortType(e.target.value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"EvaluationList\">\r\n            <div className=\"menu_wrapper\">\r\n                <div className=\"left_col\">\r\n                    <h4>최근 나의 맵기평가</h4>\r\n                </div>\r\n                <div className=\"right_col\">\r\n                    <select value={sortType} onChange={onChangeSortType}>\r\n                        {sortOptionList.map((it, idx) => (\r\n                            <option key={idx} value={it.value}>\r\n                                {it.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <input \r\n                className=\"searchbar\" \r\n                value={search}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"검색어를 입력하세요\"\r\n            />\r\n            <div className=\"list_wrapper\">\r\n                {/* {sortedData.map((it) => (\r\n                    <EvaluationItem \r\n                        key={it.id} \r\n                        {...it} \r\n                    />\r\n                ))} */}\r\n                {getSearchResult().map((it) => (\r\n                    <EvaluationItem\r\n                        key={it.id}\r\n                        {...it}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EvaluationList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seorin\\\\Desktop\\\\Mapdagu-Front\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport Login from \"../components/login/Login\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'https://mapdagu.site/login';\nconst LoginPage = ({\n  getUserInfRes\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    role: \"\",\n    accessToken: \"\",\n    refreshToken: \"\"\n  });\n\n  // const onSubmit = async (data) => {\n  //     const { email, password } = data;\n  //     try {\n  //         const res = (await axios.post(SERVER_URL, {email, password}));\n  //         const role = res.data.role;\n  //         const accessToken = res.headers[`authorization`];\n  //         const refreshToken = res.headers[`authorization-refresh`];\n  //     }catch (error) {\n  //         alert(error.response.data.message);\n  //     }\n  // }\n  useEffect(() => {\n    try {\n      const res = axios.post(SERVER_URL, {\n        email,\n        password\n      }).then(res => {\n        setState({\n          role: res.data.role,\n          accessToken: res.headers[`authorization`],\n          refreshToken: res.headers[`authorization-refresh`]\n        });\n      });\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  }, []);\n  const onSubmit = () => {\n    if (role === \"NOT_TEST_USER\") {\n      navigate(`/test`);\n    } else if (role === \"USER\") {\n      navigate(`/main`);\n    } else {\n      navigate(`/set_profile`);\n    }\n    getUserInfRes(state);\n    console.log(state);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"+m61ZSknWRyjC7ju7EbSKiUa34o=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["Login","useNavigate","axios","useEffect","useState","jsxDEV","_jsxDEV","SERVER_URL","LoginPage","getUserInfRes","_s","navigate","state","setState","role","accessToken","refreshToken","res","post","email","password","then","data","headers","error","alert","response","message","onSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/seorin/Desktop/Mapdagu-Front/src/pages/LoginPage.js"],"sourcesContent":["import Login from \"../components/login/Login\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst SERVER_URL = 'https://mapdagu.site/login';\r\n\r\nconst LoginPage = ({getUserInfRes}) => {\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState({\r\n        role: \"\",\r\n        accessToken: \"\",\r\n        refreshToken: \"\",\r\n    })\r\n\r\n    // const onSubmit = async (data) => {\r\n    //     const { email, password } = data;\r\n    //     try {\r\n    //         const res = (await axios.post(SERVER_URL, {email, password}));\r\n    //         const role = res.data.role;\r\n    //         const accessToken = res.headers[`authorization`];\r\n    //         const refreshToken = res.headers[`authorization-refresh`];\r\n    //     }catch (error) {\r\n    //         alert(error.response.data.message);\r\n    //     }\r\n    // }\r\n    useEffect(() => {\r\n        try{\r\n            const res = axios.post(SERVER_URL, {email, password})\r\n                .then(res => {\r\n                    setState({\r\n                        role: res.data.role,\r\n                        accessToken: res.headers[`authorization`],\r\n                        refreshToken: res.headers[`authorization-refresh`],\r\n                    })\r\n                })\r\n        } catch(error){\r\n            alert(error.response.data.message);\r\n        }\r\n    }, []);\r\n\r\n    const onSubmit = () => {\r\n        if(role === \"NOT_TEST_USER\"){\r\n            navigate(`/test`);\r\n        } else if(role === \"USER\"){\r\n            navigate(`/main`);\r\n        } else {\r\n            navigate(`/set_profile`);\r\n        }\r\n        getUserInfRes(state);\r\n        console.log(state);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Login onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,2BAA2B;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAG,4BAA4B;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAC/BU,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAb,SAAS,CAAC,MAAM;IACZ,IAAG;MACC,MAAMc,GAAG,GAAGf,KAAK,CAACgB,IAAI,CAACX,UAAU,EAAE;QAACY,KAAK;QAAEC;MAAQ,CAAC,CAAC,CAChDC,IAAI,CAACJ,GAAG,IAAI;QACTJ,QAAQ,CAAC;UACLC,IAAI,EAAEG,GAAG,CAACK,IAAI,CAACR,IAAI;UACnBC,WAAW,EAAEE,GAAG,CAACM,OAAO,CAAE,eAAc,CAAC;UACzCP,YAAY,EAAEC,GAAG,CAACM,OAAO,CAAE,uBAAsB;QACrD,CAAC,CAAC;MACN,CAAC,CAAC;IACV,CAAC,CAAC,OAAMC,KAAK,EAAC;MACVC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;IACtC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAGd,IAAI,KAAK,eAAe,EAAC;MACxBH,QAAQ,CAAE,OAAM,CAAC;IACrB,CAAC,MAAM,IAAGG,IAAI,KAAK,MAAM,EAAC;MACtBH,QAAQ,CAAE,OAAM,CAAC;IACrB,CAAC,MAAM;MACHA,QAAQ,CAAE,cAAa,CAAC;IAC5B;IACAF,aAAa,CAACG,KAAK,CAAC;IACpBiB,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;EACtB,CAAC;EAGD,oBACIN,OAAA;IAAAyB,QAAA,eACIzB,OAAA,CAACN,KAAK;MAAC4B,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAAAzB,EAAA,CApDKF,SAAS;EAAA,QACMP,WAAW;AAAA;AAAAmC,EAAA,GAD1B5B,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seorin\\\\Desktop\\\\Mapdagu-Front\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport \"./Editor.css\";\nimport OptionItem from \"./OptionItem\";\nimport Button from \"./Button\";\nimport Bottom from \"./Bottom\";\nimport { getItemImgById, selectionList } from \"../util\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  initData,\n  onSubmit\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    name: \"\",\n    imageNum: 0,\n    score: 0\n  });\n  const handleOnSubmit = () => {\n    onSubmit(state);\n  };\n  const handleOnBack = () => {\n    navigate(-1);\n  };\n  const handleChangeItemName = e => {\n    setState({\n      ...state,\n      name: e.target.value\n    });\n  };\n  const handleChangeSelection = useCallback(score => {\n    setState(state => ({\n      ...state,\n      score\n    }));\n  }, []);\n  useEffect(() => {\n    if (initData) {\n      setState({\n        ...initData\n      });\n    }\n  }, [initData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: state.name,\n      onChange: handleChangeItemName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: state.imageNum ? getItemImgById(state.imageNum) : getItemImgById(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: state.name ? state.name : \"음식을 선택해 주세요\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" '\", state.name, \"'\\uC740(\\uB294) \\uC5B4\\uB290 \\uC815\\uB3C4 \\uB9F5\\uB098\\uC694?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection_list_wrapper\",\n      children: selectionList.map(it => /*#__PURE__*/_jsxDEV(OptionItem, {\n        ...it,\n        onClick: handleChangeSelection,\n        isSelected: state.score === it.id\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      leftChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"취소하기\",\n        onClick: handleOnBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }, this),\n      rightChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"작성완료\",\n        onClick: handleOnSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"Rw7+vf21PPQReG+MBKUNHnsXjBY=\", false, function () {\n  return [useNavigate];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["OptionItem","Button","Bottom","getItemImgById","selectionList","useCallback","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Editor","initData","onSubmit","_s","navigate","state","setState","name","imageNum","score","handleOnSubmit","handleOnBack","handleChangeItemName","e","target","value","handleChangeSelection","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","map","it","onClick","isSelected","id","leftChild","text","rightChild","_c","$RefreshReg$"],"sources":["C:/Users/seorin/Desktop/Mapdagu-Front/src/components/Editor.js"],"sourcesContent":["import \"./Editor.css\";\r\nimport OptionItem from \"./OptionItem\";\r\nimport Button from \"./Button\";\r\nimport Bottom from \"./Bottom\";\r\nimport { getItemImgById, selectionList } from \"../util\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Editor = ({initData, onSubmit}) => {  \r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        imageNum: 0,\r\n        score: 0,\r\n    });\r\n\r\n    const handleOnSubmit = () => {\r\n        onSubmit(state);\r\n    }\r\n    const handleOnBack = () => {\r\n        navigate(-1);\r\n    }\r\n    const handleChangeItemName = (e) => {\r\n        setState({\r\n            ...state,\r\n            name: e.target.value,\r\n        })\r\n    }\r\n    const handleChangeSelection = useCallback((score) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            score,\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(initData){\r\n            setState({\r\n                ...initData\r\n            })\r\n        }\r\n    }, [initData])\r\n\r\n    return (\r\n        <div className=\"Editor\">\r\n            <textarea value={state.name} onChange={handleChangeItemName}/>\r\n            <div className=\"image_wrapper\">\r\n                <img alt=\"\" src={state.imageNum ? getItemImgById(state.imageNum) : getItemImgById(1)}/> \r\n                <div>\r\n                    <h2>{state.name ? state.name : \"음식을 선택해 주세요\"}</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"text_wrapper\"> \r\n                <h2> '{state.name}'은(는) 어느 정도 맵나요?</h2>\r\n            </div>\r\n            <div className=\"selection_list_wrapper\">\r\n                {selectionList.map((it) => (\r\n                    <OptionItem\r\n                        key={it.id}\r\n                        {...it}\r\n                        onClick={handleChangeSelection}\r\n                        isSelected={state.score === it.id}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <Bottom leftChild={<Button text={\"취소하기\"} onClick={handleOnBack}/>}\r\n                    rightChild={<Button text={\"작성완료\"} onClick={handleOnSubmit}/>}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,cAAc,EAAEC,aAAa,QAAQ,SAAS;AACvD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBR,QAAQ,CAACG,KAAK,CAAC;EACnB,CAAC;EACD,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvBP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EACD,MAAMQ,oBAAoB,GAAIC,CAAC,IAAK;IAChCP,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,IAAI,EAAEM,CAAC,CAACC,MAAM,CAACC;IACnB,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,qBAAqB,GAAGtB,WAAW,CAAEe,KAAK,IAAK;IACjDH,QAAQ,CAAED,KAAK,KAAM;MACjB,GAAGA,KAAK;MACRI;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACZ,IAAGM,QAAQ,EAAC;MACRK,QAAQ,CAAC;QACL,GAAGL;MACP,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACIF,OAAA;IAAKkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBnB,OAAA;MAAUgB,KAAK,EAAEV,KAAK,CAACE,IAAK;MAACY,QAAQ,EAAEP;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DxB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BnB,OAAA;QAAKyB,GAAG,EAAC,EAAE;QAACC,GAAG,EAAEpB,KAAK,CAACG,QAAQ,GAAGhB,cAAc,CAACa,KAAK,CAACG,QAAQ,CAAC,GAAGhB,cAAc,CAAC,CAAC;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvFxB,OAAA;QAAAmB,QAAA,eACInB,OAAA;UAAAmB,QAAA,EAAKb,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACE,IAAI,GAAG;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBnB,OAAA;QAAAmB,QAAA,GAAI,IAAE,EAACb,KAAK,CAACE,IAAI,EAAC,+DAAgB;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAClCzB,aAAa,CAACiC,GAAG,CAAEC,EAAE,iBAClB5B,OAAA,CAACV,UAAU;QAAA,GAEHsC,EAAE;QACNC,OAAO,EAAEZ,qBAAsB;QAC/Ba,UAAU,EAAExB,KAAK,CAACI,KAAK,KAAKkB,EAAE,CAACG;MAAG,GAH7BH,EAAE,CAACG,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA,CAACR,MAAM;MAACwC,SAAS,eAAEhC,OAAA,CAACT,MAAM;QAAC0C,IAAI,EAAE,MAAO;QAACJ,OAAO,EAAEjB;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAE;MAC1DU,UAAU,eAAElC,OAAA,CAACT,MAAM;QAAC0C,IAAI,EAAE,MAAO;QAACJ,OAAO,EAAElB;MAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAApB,EAAA,CA9DKH,MAAM;EAAA,QACSH,WAAW;AAAA;AAAAqC,EAAA,GAD1BlC,MAAM;AAgEZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
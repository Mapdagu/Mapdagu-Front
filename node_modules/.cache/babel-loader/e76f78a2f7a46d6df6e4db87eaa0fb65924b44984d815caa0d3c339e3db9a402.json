{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seorin\\\\Documents\\\\CodingRin\\\\Mapdagu-Front\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport \"./SignUp.css\";\nimport Button from \"./Button\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGN_UP_URL = `https://mapdagu.site/members/sign-up`;\nconst SignUp = () => {\n  _s();\n  const [userList, setUserList] = useState();\n  const fetchData = async () => {\n    const response = await axios.get(SIGN_UP_URL);\n    setUserList(response.data);\n  };\n  const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n  const {\n    userName,\n    email,\n    password,\n    passwordConfirm\n  } = inputValue;\n\n  // const [errMsg, setErrMsg] = useState({\n  //     nameMsg: \"name err\",\n  //     emailMsg: \"email err\",\n  //     passwordMsg:\"pw err\",\n  //     passwordConfirmMsg: \"pw confirm err\",\n  // })\n  // const { nameMsg, emailMsg, passwordMsg, passwordConfirmMsg } = errMsg;\n\n  // const [ validity, setValidity ] = useState({\n  //     isName: \"\",\n  //     isEmail: \"\",\n  //     isPassword: \"\",\n  //     isPasswordConfirm: \"\",\n  // })\n  // const { isName, isEmail, isPassword, isPasswordConfirm } = validity;\n\n  // 이메일 검사: '@', '.'이 둘 다 포함 될 것\n  const isValidEmail = email.includes('@') && email.includes('.');\n  // 비밀번호 특수문자 검사를 위한 정규식 표현.\n  // const specialLetter = password.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n  // 전체 8자 이상일 것.\n  const isValidPassword = password.length >= 8;\n  // 모든 input의 value가 1자 이상이 될 것\n  const isValidInput = userName.length >= 1;\n  // 이메일 코드 인증 확인\n  // 비밀번호와 비밀번호 확인 값이 일치할 것\n  const isPasswordChecked = password === passwordConfirm ? true : false;\n\n  // 검사한 모든 로직의 유효성 검사가 true가 될때 getIsActive함수가 작동한다. 버튼 클릭 이벤트가 발생할때 넣어줄 함수.\n  const getIsActive = isValidEmail && isValidPassword && isValidInput && isPasswordChecked === true;\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value\n    });\n  };\n  const onSubmitHandler = async e => {\n    if (getIsActive) {\n      e.preventDefault();\n      await axios.post(SIGN_UP_URL, {\n        userName,\n        email,\n        password\n      });\n      fetchData();\n      navigate(`/set_profile`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signUpInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputMessage\",\n          children: \"1. \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"userName\",\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputMessage\",\n          children: \"2. \\uC774\\uBA54\\uC77C \\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: isValidEmail ? '올바른 이메일 형식이에요' : '이메일 형식이 틀렸어요'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputMessage\",\n          children: \"3. \\uBE44\\uBC00\\uBC88\\uD638 \\uC124\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputMessage\",\n          children: \"4. \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"passwordConfirm\",\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\uB2E4\\uC74C \\uB2E8\\uACC4\",\n      onClick: onSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"8c40AWd7xAAoaIlaVj7P7XQUrAA=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Button","useState","useNavigate","axios","jsxDEV","_jsxDEV","SIGN_UP_URL","SignUp","_s","userList","setUserList","fetchData","response","get","data","navigate","inputValue","setInputValue","userName","email","password","passwordConfirm","isValidEmail","includes","isValidPassword","length","isValidInput","isPasswordChecked","getIsActive","handleInput","e","name","value","target","onSubmitHandler","preventDefault","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/seorin/Documents/CodingRin/Mapdagu-Front/src/components/SignUp.js"],"sourcesContent":["import \"./SignUp.css\";\r\nimport Button from \"./Button\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SIGN_UP_URL = `https://mapdagu.site/members/sign-up`;\r\n\r\nconst SignUp = () => {\r\n    const [userList, setUserList] = useState();\r\n    \r\n    const fetchData = async () => {\r\n        const response = await axios.get(SIGN_UP_URL);\r\n        setUserList(response.data);\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n    const [inputValue, setInputValue] = useState({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n    });\r\n    const { userName, email, password, passwordConfirm } = inputValue;\r\n\r\n    // const [errMsg, setErrMsg] = useState({\r\n    //     nameMsg: \"name err\",\r\n    //     emailMsg: \"email err\",\r\n    //     passwordMsg:\"pw err\",\r\n    //     passwordConfirmMsg: \"pw confirm err\",\r\n    // })\r\n    // const { nameMsg, emailMsg, passwordMsg, passwordConfirmMsg } = errMsg;\r\n\r\n    // const [ validity, setValidity ] = useState({\r\n    //     isName: \"\",\r\n    //     isEmail: \"\",\r\n    //     isPassword: \"\",\r\n    //     isPasswordConfirm: \"\",\r\n    // })\r\n    // const { isName, isEmail, isPassword, isPasswordConfirm } = validity;\r\n\r\n    // 이메일 검사: '@', '.'이 둘 다 포함 될 것\r\n    const isValidEmail = email.includes('@') && email.includes('.');\r\n    // 비밀번호 특수문자 검사를 위한 정규식 표현.\r\n    // const specialLetter = password.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\r\n    // 전체 8자 이상일 것.\r\n    const isValidPassword = password.length >= 8;\r\n    // 모든 input의 value가 1자 이상이 될 것\r\n    const isValidInput = userName.length >= 1 ;\r\n    // 이메일 코드 인증 확인\r\n    // 비밀번호와 비밀번호 확인 값이 일치할 것\r\n    const isPasswordChecked = ((password === passwordConfirm) ? true : false);\r\n\r\n    // 검사한 모든 로직의 유효성 검사가 true가 될때 getIsActive함수가 작동한다. 버튼 클릭 이벤트가 발생할때 넣어줄 함수.\r\n    const getIsActive = \r\n    isValidEmail && isValidPassword && isValidInput && isPasswordChecked === true;\r\n\r\n   \r\n    const handleInput = (e) => {\r\n        const { name, value } = e.target;\r\n        setInputValue({\r\n            ...inputValue,\r\n            [name]: value,\r\n        });\r\n    };\r\n    \r\n    const onSubmitHandler = async (e) => {\r\n        if(getIsActive){\r\n            e.preventDefault();\r\n            await axios.post(SIGN_UP_URL, { userName, email, password });\r\n            fetchData();\r\n            navigate(`/set_profile`);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"SignUp\">\r\n            <form className=\"signUpInput\">\r\n                <div className=\"nameInput\">\r\n                    <div className=\"inputMessage\">1. 이름</div>\r\n                    <input \r\n                        name=\"userName\"\r\n                        onChange={handleInput}\r\n                    />\r\n                </div>\r\n                <div className=\"emailInput\">\r\n                    <div className=\"inputMessage\">2. 이메일 인증</div>\r\n                    <input \r\n                        name=\"email\"\r\n                        onChange={handleInput}\r\n                    />\r\n                    <h6>{isValidEmail ? '올바른 이메일 형식이에요' : '이메일 형식이 틀렸어요'}</h6>\r\n                </div>\r\n                {/* <div>\r\n                    <textarea value={state.email} onChange={handleOnChangeEmail} placeholder=\"이메일 입력\" />\r\n                    <Button text=\"인증번호 요청\" onClick={onRequestCode}/>\r\n                </div>\r\n                <div>\r\n                    <textarea value={state.code} onChange={handleOnChangeCode} placeholder=\"인증번호 입력\" />\r\n                    <Button text=\"인증번호 확인\" onClick={onCheckCode}/>\r\n                </div> */}\r\n                <div className=\"passwordInput\">\r\n                    <div className=\"inputMessage\">3. 비밀번호 설정</div>\r\n                    <input \r\n                        type='password'\r\n                        name=\"password\"\r\n                        onChange={handleInput}\r\n                    />\r\n                    <div className=\"inputMessage\">4. 비밀번호 확인</div>\r\n                    <input \r\n                        type='password'\r\n                        name=\"passwordConfirm\"\r\n                        onChange={handleInput}\r\n                    />\r\n                </div>             \r\n            </form>\r\n            <Button text=\"다음 단계\" onClick={onSubmitHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}